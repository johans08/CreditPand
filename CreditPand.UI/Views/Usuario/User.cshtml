@model CreditPand.BD.Modelo.Usuario

@{
    ViewBag.Title = "User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="page-heading header-text">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h1>@HttpContext.Current.Session["Username"].ToString()</h1>
                <span>Perfil de Usuario</span>
            </div>
        </div>
    </div>
</div>

<div class="callback-form contact-us" style="background-color: #373636;">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="section-heading">
                    <h2 style="color: #ffffff;">Su <em>información</em></h2>
                    <span style="color: #ffffff;">Actualice sus datos personales</span>
                </div>
            </div>
            <div class="col-md-12">
                <div class="contact-form">
                    <form id="registro" action="ModificarUsuario" controller="Usuario" method="get">
                        <div class="row">

                            <div class="col-lg-4 col-md-12 col-sm-12">
                                <fieldset>
                                    <input name="Id" type="text" class="form-control" id="id" placeholder="Id" readonly = "readonly" value=@HttpContext.Current.Session["Ide"].ToString()>
                                </fieldset>
                            </div>

                            <div class="col-lg-4 col-md-12 col-sm-12">
                                <fieldset>
                                    <input name="Nombre" type="text" class="form-control" id="nombre" placeholder="Nombre" readonly = "readonly" value=@HttpContext.Current.Session["Nombre"].ToString()>
                                </fieldset>
                            </div>

                            <div class="col-lg-4 col-md-12 col-sm-12">
                                <fieldset>
                                    <input name="Apellido" type="text" class="form-control" id="apellido" placeholder="Apellido" readonly = "readonly" value=@HttpContext.Current.Session["Apellido"].ToString()>
                                </fieldset>
                            </div>

                            <div class="col-lg-4 col-md-12 col-sm-12">
                                <fieldset>
                                    <input name="SegundoApellido" type="text" class="form-control" id="segundoApellido" placeholder="Segundo Apellido" readonly = "readonly" value=@HttpContext.Current.Session["SegundoApellido"].ToString()>
                                </fieldset>
                            </div>

                            <div class="col-lg-4 col-md-12 col-sm-12">
                                <fieldset>
                                    <input name="Telefono" type="tel" class="form-control" id="numero" placeholder="Teléfono" readonly = "readonly" value=@HttpContext.Current.Session["Telefono"].ToString()>
                                </fieldset>
                            </div>

                            <div class="col-lg-4 col-md-12 col-sm-12">
                                <fieldset>
                                    <input name="Email" type="email" class="form-control" id="email" placeholder="E-Mail Address" readonly = "readonly" value=@HttpContext.Current.Session["Email"].ToString()>
                                </fieldset>
                            </div>

                            <div class="col-lg-6 col-md-12 col-sm-12">
                                <fieldset>
                                    <input name="Username" type="text" class="form-control" id="usuario" placeholder="Usuario" readonly = "readonly" value=@HttpContext.Current.Session["Username"].ToString()>
                                </fieldset>
                            </div>

                            <div class="col-lg-6 col-md-12 col-sm-12">
                                <fieldset>
                                    <input name="Pass" type="password" class="form-control" id="contrasena" placeholder="Contraseña" readonly = "readonly" value=@HttpContext.Current.Session["Pass"].ToString()>
                                </fieldset>
                            </div>

                          <div class="col-lg-12">
                                <fieldset>
                                    <button type="submit" id="form-submit" class="filled-button">Guardar cambios</button>
                                </fieldset>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



<script language="text/Javascript">

    cleared[0] = cleared[1] = cleared[2] = 0; //set a cleared flag for each field
    function clearField(t) {                   //declaring the array outside of the
        if (!cleared[t.id]) {                      // function makes it static and global
            cleared[t.id] = 1;  // you could use true and false, but that's more typing
            t.value = '';         // with more chance of typos
            t.style.color = '#fff';
        }
    }
</script>




<!--Código para traer solos los datos del usuario que se loguea en su perfil-->
<!--
Querying with Object Services and Entity SQL
string sqlString = "SELECT VALUE st FROM CreditPandEntities.Usuario " +
                    "AS st WHERE st.StudentName == 'Bill'";

var objctx = (ctx as IObjectContextAdapter).ObjectContext;

ObjectQuery<Student> student = objctx.CreateQuery<Student>(sqlString);
Student newStudent = student.First<Student>();



using (CreditPandEntities ContextoBD = new CreditPandEntities())
{


    con.Open();
    EntityCommand cmd = con.CreateCommand();
    cmd.CommandText = "SELECT VALUE st FROM SchoolDBEntities.Students as st where st.StudentName='Bill'";
    Dictionary<int, string>
    dict = new Dictionary<int, string>
        ();
        using (EntityDataReader rdr = cmd.ExecuteReader(CommandBehavior.SequentialAccess | CommandBehavior.CloseConnection))
        {
        while (rdr.Read())
        {
        int a = rdr.GetInt32(0);
        var b = rdr.GetString(1);
        dict.Add(a, b);
        }
        }
        }
-->
